{"version":3,"sources":["store/modules/todos.js","components/TodoInput.js","components/TodoItem.js","components/TodoList.js","components/Todos.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["ADDONE","REMOVE","TOGGLE","INPUTS","inputs","text","type","no","initialState","todos","id","isChecked","reducer","state","action","filter","todo","map","TodoInput","useSelector","dispatch","useDispatch","onSubmit","e","preventDefault","addone","className","onChange","target","value","placeholder","TodoItem","style","color","opacity","checked","toggle","border","background","onClick","remove","TodoList","listStyle","Todos","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","store","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAGMA,EAAS,eACTC,EAAS,eACTC,EAAS,eACTC,EAAS,eAMFC,EAAS,SAACC,GAAD,MAAW,CAACC,KAAMH,EAAQE,SAG5CE,EAAK,EACHC,EAAe,CACjBH,KAAM,GACNI,MACA,CACI,CAACC,GAAI,EAAGL,KAAM,cAAeM,WAAW,GACxC,CAACD,GAAI,EAAGL,KAAM,cAAeM,WAAW,GACxC,CAACD,GAAI,EAAGL,KAAM,mBAAoBM,WAAW,KA0CtCC,EArCC,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCAC9C,OAAQA,EAAOR,MACX,KAAKN,EACD,OAAO,2BACAa,GADP,IAEIJ,MAAM,GAAD,mBACEI,EAAMJ,OADR,CAED,CACIC,GAAIH,IACJF,KAAMS,EAAOT,KACbM,WAAW,OAI3B,KAAKV,EACD,OAAO,2BACAY,GADP,IAEIJ,MAAOI,EAAMJ,MAAMM,QAAO,SAAAC,GAAI,OAAIA,EAAKN,KAAOI,EAAOJ,QAE7D,KAAKR,EACD,OAAO,2BACAW,GADP,IAEIJ,MAAOI,EAAMJ,MAAMQ,KAAI,SAAAD,GAAI,OAAIA,EAAKN,KAAOI,EAAOJ,GAAnB,2BACxBM,GADwB,IAE3BL,WAAYK,EAAKL,YACjBK,OAEZ,KAAKb,EACD,OAAO,2BACAU,GADP,IAEIR,KAAMS,EAAOT,OAErB,QACI,OAAOQ,I,OCxCJK,EAfG,WACd,IAAMb,EAAOc,aAAY,SAAAN,GAAK,OAAIA,EAAMJ,MAAMJ,QACxCe,EAAWC,cAMjB,OACI,sBAAMC,SANO,SAAAC,GACbA,EAAEC,iBACFJ,EDDc,SAACf,GAAD,MAAW,CAACC,KAAMN,EAAQK,QCC/BoB,CAAOpB,IAChBe,EAAShB,EAAO,MAGUsB,UAAU,OAApC,SACI,uBAAOpB,KAAK,OAAOqB,SAAU,SAAAJ,GAAC,OAAIH,EAAShB,EAAOmB,EAAEK,OAAOC,SAASA,MAAOxB,EAAMyB,YAAY,8BCA1FC,EAXE,SAAC,GAAY,IAAXf,EAAU,EAAVA,KACRN,EAAuBM,EAAvBN,GAAIL,EAAmBW,EAAnBX,KAAMM,EAAaK,EAAbL,UACXS,EAAWC,cACjB,OACI,qBAAIW,MAAO,CAACC,MAAOtB,EAAY,OAAS,QAASuB,QAASvB,EAAY,GAAM,GAA5E,UACI,uBAAOL,KAAK,WAAW6B,QAASxB,EAAWgB,SAAU,kBAAMP,EFEjD,SAAAV,GAAE,MAAK,CAACJ,KAAMJ,EAAQQ,MEFoC0B,CAAO1B,OAD/E,IACwFL,EACpF,wBAAQ2B,MAAO,CAACK,OAAQ,OAAQC,WAAY,eAAeC,QAAS,kBAAMnB,EFAhE,SAAAV,GAAE,MAAK,CAACJ,KAAML,EAAQS,GAAIA,GEA+C8B,CAAO9B,KAA1F,0BCKG+B,EAXE,WACb,IAAMhC,EAAQU,aAAY,SAAAN,GAAK,OAAIA,EAAMJ,MAAMA,SAC/C,OACI,oBAAIuB,MAAO,CAACU,UAAY,QAAShB,UAAU,OAA3C,SAEOjB,EAAMQ,KAAI,SAAAD,GAAI,OAAI,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKN,UCKtCiC,EAVD,WACV,OACI,sBAAKjB,UAAU,OAAf,UACI,kDAAoB,mDACpB,cAAC,EAAD,IACA,cAAC,EAAD,QCIGkB,G,YARH,WACV,OACE,qBAAKlB,UAAU,KAAf,SACE,cAAC,EAAD,QCISmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCJCQ,cAAgB,CAC3B7C,UCOE8C,EAAQC,YAAYC,GAE1BC,IAASC,OAEP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.d4d91300.chunk.js","sourcesContent":["// ÌïÑÏöîÌïú Í≤É - Î¶¨Ïä§Ìä∏ Ï∂îÍ∞Ä, Î¶¨Ïä§Ìä∏ Ï†úÍ±∞, Î¶¨Ïä§Ìä∏ ÌÜ†Í∏Ä, Î¶¨Ïä§Ìä∏ ÏûÖÎ†•\n\n// Ïï°ÏÖò ÏÉùÏÑ±\nconst ADDONE = 'todos/ADDONE';\nconst REMOVE = 'todos/REMOVE';\nconst TOGGLE = 'todos/TOGGLE';\nconst INPUTS = 'todos/INPUTS';\n\n// Ïï°ÏÖò Ìï®Ïàò ÎÇ¥Î≥¥ÎÇ¥Í∏∞\nexport const addone = (text) => ({type: ADDONE, text})\nexport const remove = id => ({type: REMOVE, id: id})\nexport const toggle = id => ({type: TOGGLE, id})\nexport const inputs = (text) => ({type: INPUTS, text})\n\n// Ï¥àÍπÉÍ∞í ÏÑ§Ï†ï\nlet no = 4;\nconst initialState = {\n    text: '',\n    todos: \n    [\n        {id: 1, text: 'study react', isChecked: false},\n        {id: 2, text: 'study redux', isChecked: true},\n        {id: 3, text: 'study typescript', isChecked: false}\n    ]\n}\n\n// Î¶¨ÎìÄÏÑú ÏÉùÏÑ±\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADDONE: \n            return {\n                ...state,\n                todos: [\n                    ...state.todos,\n                    {\n                        id: no++,\n                        text: action.text,\n                        isChecked: false\n                    }\n                ]\n            }\n        case REMOVE: \n            return {\n                ...state,\n                todos: state.todos.filter(todo => todo.id !== action.id)\n            }\n        case TOGGLE: \n            return {\n                ...state,\n                todos: state.todos.map(todo => todo.id === action.id ? {\n                    ...todo,\n                    isChecked: !todo.isChecked\n                } : todo)\n            }\n        case INPUTS: \n            return {\n                ...state,\n                text: action.text\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { addone, inputs } from '../store/modules/todos';\n\nconst TodoInput = () => {\n    const text = useSelector(state => state.todos.text)\n    const dispatch = useDispatch()\n    const onSubmit = e => {\n        e.preventDefault()\n        dispatch(addone(text))\n        dispatch(inputs(''))\n    }\n    return (\n        <form onSubmit={onSubmit} className=\"form\">\n            <input type=\"text\" onChange={e => dispatch(inputs(e.target.value))} value={text} placeholder=\"type and enter to list\"/> \n        </form>\n    );\n};\n\nexport default TodoInput;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { remove, toggle } from '../store/modules/todos';\n\nconst TodoItem = ({todo}) => {\n    const {id, text, isChecked} = todo\n    const dispatch = useDispatch()\n    return (\n        <li style={{color: isChecked ? 'gray' : 'white', opacity: isChecked ? 0.5 : 1}}>\n            <input type=\"checkbox\" checked={isChecked} onChange={() => dispatch(toggle(id))}/> {text} \n            <button style={{border: 'none', background: 'transparent'}}onClick={() => dispatch(remove(id))}> ‚ùå </button>\n        </li>\n    );\n};\n\nexport default TodoItem;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport TodoItem from './TodoItem';\n\nconst TodoList = () => {\n    const todos = useSelector(state => state.todos.todos)\n    return (\n        <ul style={{listStyle : 'none'}} className=\"list\">\n           {\n               todos.map(todo => <TodoItem key={todo.id} todo={todo} />)\n           } \n        </ul>\n    );\n};\n\nexport default TodoList;","import React from 'react';\nimport TodoInput from './TodoInput';\nimport TodoList from './TodoList';\n\nconst Todos = () => {\n    return (\n        <div className=\"main\">\n            <h2>Things to do... <span>üëÄ</span></h2>\n            <TodoInput />\n            <TodoList/> \n        </div>\n    );\n};\n\nexport default Todos;","import React from 'react';\nimport Todos from './components/Todos';\nimport './components/css/style.css'\nimport './components/css/reset.css'\n\nconst App = () => {\n  return (\n    <div className=\"bg\">\n      <Todos />\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport todos from './modules/todos'\n\nexport default combineReducers({\n    todos\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore } from 'redux';\n\nimport rootReducer from './store'\nimport { Provider } from 'react-redux';\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n    \n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}